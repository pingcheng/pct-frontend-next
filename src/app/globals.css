@import 'tailwindcss';
@import '../styles/vars-generic.css';

@theme {
  --background-image-gradient-radial: radial-gradient(var(--tw-gradient-stops));
  --background-image-gradient-conic: conic-gradient(
    from 180deg at 50% 50%,
    var(--tw-gradient-stops)
  );

  --font-code: source-code-pro, Menlo, Monaco, Consolas, Courier New, monospace;
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-border);
  }
}

/*
 * Standardized container utilities for consistent spacing throughout the app
 */
@utility page-container {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 2rem;
  padding-right: 2rem;
}

@media (max-width: 1024px) {
  .page-container {
    max-width: 100%;
    padding-left: 2rem;
    padding-right: 2rem;
  }
}

@media (max-width: 640px) {
  .page-container {
    padding-left: 1rem;
    padding-right: 1rem;
  }
}

body {
  color: var(--color-text);
  background: var(--color-bg);
  font-family: 'Inter', system-ui, sans-serif;
  transition: background 0.3s ease-in-out, color 0.3s ease-in-out;
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

/* Default transitions for interactive elements */
a, button {
  transition: all 0.2s ease-in-out;
}

/* Fade in animation */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Animation utility classes */
.animate-fade-in {
  animation: fadeIn 0.6s ease-out forwards;
}

.animate-fade-in-scale {
  animation: fadeInScale 0.4s ease-out forwards;
}

.animate-slide-in-left {
  animation: slideInLeft 0.5s ease-out forwards;
}

.animate-slide-in-right {
  animation: slideInRight 0.5s ease-out forwards;
}

/* Staggered animation delays */
.animate-delay-100 { animation-delay: 0.1s; }
.animate-delay-200 { animation-delay: 0.2s; }
.animate-delay-300 { animation-delay: 0.3s; }
.animate-delay-400 { animation-delay: 0.4s; }
.animate-delay-500 { animation-delay: 0.5s; }

/* Initial state for animated elements */
.animate-fade-in,
.animate-fade-in-scale,
.animate-slide-in-left,
.animate-slide-in-right {
  opacity: 0;
}

/* Respect reduced motion preferences */
@media (prefers-reduced-motion: reduce) {
  .animate-fade-in,
  .animate-fade-in-scale,
  .animate-slide-in-left,
  .animate-slide-in-right {
    animation: none;
    opacity: 1;
    transform: none;
  }
  
  .socialLink:hover {
    transform: none;
  }
  
  .card:hover {
    transform: none;
  }
  
  .portfolioCard:hover {
    transform: none;
  }
}

.card {
  background: var(--color-card);
  border-radius: 1rem;
  box-shadow: 0 2px 16px 0 rgba(0,0,0,0.04);
  border: 1px solid var(--color-border);
  transition: all 0.3s ease-in-out;
}

.card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 24px 0 rgba(0,0,0,0.08);
}

@media (prefers-color-scheme: dark) {
  .card {
    box-shadow: 0 2px 16px 0 rgba(0,0,0,0.16);
  }
  
  .card:hover {
    box-shadow: 0 4px 24px 0 rgba(0,0,0,0.24);
  }
}

/* Standardized section class for consistent spacing */
.section {
  padding: 2rem 0;
  margin-bottom: 2rem;
}

@media (max-width: 640px) {
  .section {
    padding: 1.5rem 0;
    margin-bottom: 1.5rem;
  }
}

.text-primary {
  color: var(--color-text);
}
